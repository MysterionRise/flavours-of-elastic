version: '3'
services:
  elk-node1:
    build:
      context: .
      args:
        ELK_VERSION: ${ELK_VERSION}
    image: elk:${ELK_VERSION}
    container_name: elk-node1
    environment:
      - cluster.name=elk-cluster
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
      - "ES_JAVA_OPTS=-Xms8g -Xmx8g" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elk-data1:/usr/share/elasticsearch/data
      #- ./root-ca.pem:/usr/share/elasticsearch/config/root-ca.pem
      #- ./esnode.pem:/usr/share/elasticsearch/config/esnode.pem
      #- ./esnode-key.pem:/usr/share/elasticsearch/config/esnode-key.pem
      #- ./kirk.pem:/usr/share/elasticsearch/config/kirk.pem
      #- ./kirk-key.pem:/usr/share/elasticsearch/config/kirk-key.pem
      #- ./custom-elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      #- ./internal_users.yml:/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/internal_users.yml
    ports:
      - 9200:9200
      - 9600:9600 # required for Performance Analyzer
    networks:
      - elk-net
  elk-node2:
    image: elk:${ELK_VERSION}
    container_name: elk-node2
    environment:
      - cluster.name=elk-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms8g -Xmx8g"
      - discovery.zen.ping.unicast.hosts=elk-node1
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elk-data2:/usr/share/elasticsearch/data
      #- ./root-ca.pem:/usr/share/elasticsearch/config/root-ca.pem
      #- ./esnode.pem:/usr/share/elasticsearch/config/esnode.pem
      #- ./esnode-key.pem:/usr/share/elasticsearch/config/esnode-key.pem
      #- ./kirk.pem:/usr/share/elasticsearch/config/kirk.pem
      #- ./kirk-key.pem:/usr/share/elasticsearch/config/kirk-key.pem
      #- ./custom-elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      #- ./internal_users.yml:/usr/share/elasticsearch/plugins/opendistro_security/
    ports:
      - 9201:9200
    networks:
      - elk-net
  kibana:
    image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
    container_name: elk-kibana
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      ELASTICSEARCH_URL: http://elk-node1:9200
    #volumes:
      #- ./custom-kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - elk-net

volumes:
  elk-data1:
  elk-data2:

networks:
  elk-net:
